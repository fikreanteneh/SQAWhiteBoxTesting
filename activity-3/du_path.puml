@startuml
title DU Paths for average_of_evens.py

start

:total = 0;\n(count = 0;);

partition Loop {
    :for num in arr;
    if (num % 2 == 0?) then (yes)
        :total += num;
        :count += 1;
    else (no)
    endif
}

if (count == 0?) then (yes)
    :return 0;
    stop
else (no)
    :return total / count;
    stop
endif

' DU Path 1: total d1 L5 c-use
note right: Path 1:\nL1 → L3 → L4 → L5\n(total updated if even exists)

' DU Path 2: total d1 L9 c-use
note right: Path 2:\nL1 → L3 → L7 → L9\n(total not updated if no evens)

' DU Path 3: total d3 L9 c-use
note right: Path 3:\nL1 → L3 → L4 → L5 → L7 → L9\n(total updated then used)

' DU Path 4: count d2 L6 c-use
note right: Path 4:\nL2 → L3 → L4 → L6\n(count incremented if even exists)

' DU Path 5: count d2 L7 p-use
note right: Path 5:\nL2 → L3 → L7\n(count stays 0 if no evens)

' DU Path 6: count d2 L9 c-use
note right: Path 6:\nL2 → L3 → L7 → L9\n(count remains 0, division guarded)

' DU Path 7: count d4 L7 p-use
note right: Path 7:\nL2 → L3 → L4 → L6 → L7\n(count updated and checked)

' DU Path 8: count d4 L9 c-use
note right: Path 8:\nL2 → L3 → L4 → L6 → L7 → L9\n(count updated and used in return)

@enduml